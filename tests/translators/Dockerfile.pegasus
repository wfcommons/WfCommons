# docker build --platform amd64 -t wfcommons-dev-dask -f Dockerfile.dask .
# docker run -it --rm -v `pwd`:/home/wfcommons wfcommons-dev-dask /bin/bash

FROM amd64/ubuntu:noble

LABEL org.containers.image.authors="henric@hawaii.edu"

# update repositories
RUN apt-get update

# set timezone
RUN echo "America/Los_Angeles" > /etc/timezone && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata

# install useful stuff
RUN apt-get -y install pkg-config 
RUN apt-get -y install git
RUN apt-get -y install wget 
RUN apt-get -y install make 
RUN apt-get -y install cmake 
RUN apt-get -y install cmake-data 
RUN apt-get -y install sudo 
RUN apt-get -y install vim --fix-missing
RUN apt-get -y install gcc 
RUN apt-get -y install gcc-multilib

# Python stuff
RUN apt-get -y install python3 python3-pip
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
RUN python3 -m pip install --break-system-packages pathos pandas filelock
RUN python3 -m pip install --break-system-packages networkx scipy matplotlib
RUN python3 -m pip install --break-system-packages pyyaml jsonschema requests
RUN python3 -m pip install --break-system-packages --upgrade setuptools

# Stress-ng
RUN apt-get -y install stress-ng

# HTCondor
RUN apt-get install -y curl
RUN curl -fsSL https://get.htcondor.org | sudo /bin/bash -s -- --no-dry-run --channel stable
RUN rm /etc/condor/config.d/00-minicondor

# HTCondor: Create master config
RUN echo "use ROLE: CentralManager" >> /etc/condor/config.d/00-minicondor-master && \
    echo "use ROLE: Submit" >> /etc/condor/config.d/00-minicondor-master && \
    echo "BIND_ALL_INTERFACES = True" >> /etc/condor/config.d/00-minicondor-master && \
    echo "CONDOR_HOST = localhost" >> /etc/condor/config.d/00-minicondor-master && \
    echo "SEC_DEFAULT_AUTHENTICATION = OPTIONAL" >> /etc/condor/config.d/00-minicondor-master && \
    echo "SEC_DEFAULT_AUTHENTICATION_METHODS = CLAIMTOBE" >> /etc/condor/config.d/00-minicondor-master && \
    echo "SCHEDD_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-master && \
    echo "NEGOTIATOR_INTERVAL = 2" >> /etc/condor/config.d/00-minicondor-master && \
    echo "NEGOTIATOR_CYCLE_DELAY = 5" >> /etc/condor/config.d/00-minicondor-master && \
    echo "STARTER_UPDATE_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-master && \
    echo "SHADOW_QUEUE_UPDATE_INTERVAL = 10" >> /etc/condor/config.d/00-minicondor-master && \
    echo "UPDATE_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-master && \
    echo "RUNBENCHMARKS = 0" >> /etc/condor/config.d/00-minicondor-master && \
    echo "HOSTALLOW_READ = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "ALLOW_WRITE = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "ALLOW_READ = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "ALLOW_NEGOTIATOR = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "ALLOW_DAEMON = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "ALLOW_COLLECTOR = *" >> /etc/condor/config.d/00-minicondor-master && \
    echo "DAGMAN_USE_STRICT = 0" >> /etc/condor/config.d/00-minicondor-master && \
    echo "MAX_TRANSFER_OUTPUT_MB = 2048" >> /etc/condor/config.d/00-minicondor-master && \
    echo "JOB_MAX_FILE_TRANSFER_SIZE = 100" >> /etc/condor/config.d/00-minicondor-master && \
    echo "JOB_DEFAULT_REQUESTDISK = 10MB" >> /etc/condor/config.d/00-minicondor-master && \
    echo "NUM_CPUS = 1" >> /etc/condor/config.d/00-minicondor-master

# HTCondor: Create worker config
RUN echo "use ROLE: Execute" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "BIND_ALL_INTERFACES = True" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "CONDOR_HOST = localhost" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "COLLECTOR_HOST = localhost" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "SEC_DEFAULT_AUTHENTICATION = OPTIONAL" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "SEC_DEFAULT_AUTHENTICATION_METHODS = CLAIMTOBE" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "SCHEDD_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "NEGOTIATOR_INTERVAL = 2" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "NEGOTIATOR_CYCLE_DELAY = 5" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "STARTER_UPDATE_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "SHADOW_QUEUE_UPDATE_INTERVAL = 10" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "UPDATE_INTERVAL = 5" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "RUNBENCHMARKS = 0" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "HOSTALLOW_WRITE = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "HOSTALLOW_READ = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "ALLOW_WRITE = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "ALLOW_READ = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "ALLOW_NEGOTIATOR = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "ALLOW_DAEMON = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "ALLOW_COLLECTOR = *" >> /etc/condor/config.d/00-minicondor-worker && \
    echo "NUM_CPUS = 1" >> /etc/condor/config.d/00-minicondor-worker

# HTCondor: Some setup
RUN mkdir -p /var/lib/condor
RUN mkdir -p /var/lib/condor/log
RUN mkdir -p /var/lib/condor/execute
RUN chown condor:condor -R /var/lib/condor
RUN chmod -R 777 /var/lib/condor/execute

# Install Pegasus
RUN wget -O - http://download.pegasus.isi.edu/pegasus/gpg.txt | sudo apt-key add -
RUN echo 'deb [arch=amd64] http://download.pegasus.isi.edu/pegasus/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/pegasus.list
RUN apt-get update
RUN apt-get install -y pegasus
RUN python3 -m pip install pegasus-wms.api --break-system-packages

# Add wfcommons user
RUN useradd -ms /bin/bash wfcommons
RUN adduser wfcommons sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
ENV PATH="$PATH:/home/wfcommons/.local/bin/"

USER wfcommons
WORKDIR /home/wfcommons

# Create script to start HTCondor
RUN echo "#!/bin/bash" >> ./start_condor.sh && \
    echo "export CONDOR_HOST=localhost" >> ./start_condor.sh && \
    echo "export COLLECTOR_HOST=localhost" >> ./start_condor.sh && \
    echo "CONDOR_CONFIG=/etc/condor/config.d/00-minicondor-master sudo condor_master" >> ./start_condor.sh && \
    echo "sudo condor_collector &" >> ./start_condor.sh && \
    echo "CONDOR_CONFIG=/etc/condor/config.d/00-minicondor-worker sudo condor_startd &" >> ./start_condor.sh && \
    echo "sleep 3" >> ./start_condor.sh && \
    echo "condor_status" >> ./start_condor.sh
RUN chmod +x ./start_condor.sh

# Create script to run the Workflow
RUN echo "#!/bin/bash" >> ./run_workflow.sh && \
    echo "pegasus-plan --dir work --cleanup none --output-site local --submit \`ls *.yml\`" >> ./run_workflow.sh && \
    echo "sleep 10" >> ./run_workflow.sh && \
    echo "PID_FILE=\`ls work/wfcommons/pegasus/*/run0001/*.pid\`" >> ./run_workflow.sh && \
    echo "echo \"Waiting for workflow execution to complete...\"" >> ./run_workflow.sh && \
    echo "while [[ -f \$PID_FILE ]]" >> ./run_workflow.sh && \
    echo "do" >> ./run_workflow.sh && \
    echo "  echo \"sleeping 5...\"" >> ./run_workflow.sh && \
    echo "  sleep 5" >> ./run_workflow.sh && \
    echo "done" >> ./run_workflow.sh && \
    echo "# Sleep 10 so that status in database is up to date..." >> ./run_workflow.sh && \
    echo "sleep 10" >> ./run_workflow.sh && \
    echo "echo \"Workflow execution complete!\"" >> ./run_workflow.sh
RUN chmod +x ./run_workflow.sh

ENV CONDOR_HOST localhost
ENV COLLECTOR_HOST localhost




